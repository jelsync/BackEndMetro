{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","routers/PrivateRoute.js","routers/PublicRoute.js","firebase/firebase-config.js","auth/clientAuth.js","components/hooks/useForm.js","components/login/LoginScreen.js","components/login/CreateUserScreen.js","components/adminClient/services.js","components/articles/services.js","components/userInterface/Navbar.js","components/articles/HomeArticlesScreen.js","components/buy/services.js","components/buy/BuyScreen.js","components/buy/ProductScreen.js","components/category/CategoryScreen.js","routers/DashboardRouter.js","components/adminClient/AdminClientScreen.js","components/adminCategory/services.js","components/adminCategory/AdminCategoryScreen.js","components/adminCategory/FormProduct.js","components/adminCategory/NewProduct.js","components/userInterface/Sidebar.js","components/userInterface/NavbarAdmin.js","routers/AdminRouter.js","components/login/LoginAdminScreen.js","routers/PrivateAdminRoute.js","routers/PublicAdminRoute.js","routers/AppRouter.js","MetroApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","clientLogin","email","password","auth","signInWithEmailAndPassword","then","user","localStorage","setItem","JSON","stringify","uid","catch","e","Swal","fire","message","LogOutUser","signOut","clear","useForm","initialState","useState","values","setValues","handleInputChange","target","name","value","loadDataForm","reset","LoginScreen","className","onSubmit","preventDefault","onChange","CreateUserScreen","lastName","addClient","a","fetch","method","headers","body","parse","getItem","resp","json","_id","htmlFor","trim","length","title","text","icon","confirmButtonText","createUserWithEmailAndPassword","updateProfile","displayName","id","getClients","getClient","deleteClient","ok","getCategories","getProducts","buy","product","position","showConfirmButton","timer","Navbar","dispatch","useContext","history","useHistory","getClientList","client","setBody","useEffect","category","setCategory","getCategory","src","style","width","marginTop","alt","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","map","item","onClick","replace","HomeArticlesScreen","products","setProducts","setCategories","productsFront","productId","getCategoriesList","getProductsList","buyProduct","data-bs-ride","urlImg","size","color","price","description","spent","disabled","getProduct","getProductClient","deleteProduct","updateProduct","getProductCategory","BuyScreen","useParams","getProductList","setProduct","quantityInStock","window","back","ProductScreen","getProductClientId","counter","amount","allFunction","deleteProductId","updateProductId","CategoryScreen","getProductCategoryList","categories","DashboardRouter","exact","path","AdminClientScreen","setClient","getClientsList","clients","deleteClientId","scope","i","newProduct","data","editProduct","nModified","AdminCategoryScreen","FormProduct","getProductId","getCategoryList","editProductId","handleGameClick","setDisabled","placeholder","min","NewProduct","categoryId","createProduct","formValid","Sidebar","NavbarAdmin","AdminRouter","LoginAdminScreen","PrivateAdminRoute","PublicAdminRoute","AppRouter","userLogged","admin","isAdmin","onAuthStateChanged","init","MetroApp","useReducer","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1b8fd4b.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n \r\nexport const AuthContext = createContext();","export const types = {\r\n    login: '[auth] login',\r\n    logout: '[auth] logout'\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? (<Component {...props} />)\n                    : (<Redirect to=\"/login\" />)\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (!isAuthenticated)\n                    ? (<Component {...props} />)\n                    : (<Redirect to=\"/\" />)\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDQmDspBua0m-W6Fb2YoGcpQITu600pm4M\",\r\n  authDomain: \"metro-workshop-9f325.firebaseapp.com\",\r\n  projectId: \"metro-workshop-9f325\",\r\n  storageBucket: \"metro-workshop-9f325.appspot.com\",\r\n  messagingSenderId: \"672038219913\",\r\n  appId: \"1:672038219913:web:3b4721933986f6fef79658\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n// const auth = firebase.auth();\r\n// export const firestore = firebase.firestore();\r\n\r\nexport {\r\n  db,\r\n  firebase,\r\n  // auth,\r\n  // firestore\r\n  // fire\r\n} ","import { firebase } from '../firebase/firebase-config';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const clientLogin = (email, password) => {\r\n    return (\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                localStorage.setItem('uid', JSON.stringify(user.uid));\r\n            })\r\n            .catch(e => {\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    )\r\n}\r\n\r\nexport const LogOutUser = () => {\r\n    return (\r\n        firebase.auth().signOut(),\r\n        localStorage.clear()\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const loadDataForm = (state) => {\r\n        setValues(state);\r\n    }\r\n\r\n    const reset = (state) => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    return [values, handleInputChange, loadDataForm, reset, setValues];\r\n\r\n} ","import React  from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { clientLogin } from '../../auth/clientAuth';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n    const [values, handleInputChange] = useForm({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password } = values;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        clientLogin(email, password);        \r\n    }\r\n    return (\r\n        <div className=\"login-wrap mt-3\">\r\n            <div className=\"login-html\">\r\n                <label className=\"tab\">Sign In</label>\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"sign-in-html mt-4\">\r\n                        <div className=\"group\">\r\n                            <label className=\"label\">Email</label>\r\n                            <input\r\n                            name=\"email\" \r\n                            type=\"text\" \r\n                            className=\"input\"  \r\n                            value={email}\r\n                            onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label className=\"label\">Password</label>\r\n                            <input\r\n                            name=\"password\"\r\n                            type=\"password\" \r\n                            className=\"input\" \r\n                            value={password}\r\n                            onChange={handleInputChange}  />\r\n                        </div>\r\n                        <div className=\"group mt-4\">\r\n                            <input type=\"submit\" className=\"button\" value=\"Sign In\" />\r\n                        </div>\r\n                        <div className=\"hr\"></div>\r\n                        <div className=\"foot-lnk\">\r\n                            <Link to=\"/create-user\">Creater User</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../hooks/useForm';\r\nimport Swal from 'sweetalert2';\r\nimport { firebase } from '../../firebase/firebase-config';\r\n\r\nexport const CreateUserScreen = () => {\r\n\r\n    const [values, handleInputChange,] = useForm({\r\n        name: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        uid: '',\r\n    });\r\n\r\n    const { email, password, name, lastName, uid } = values;\r\n    const formValid = () => {\r\n        if (name.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a name',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (lastName.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a Last Name',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (email.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'Enter an email',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (password.trim().length < 6) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'The password must be greater than 6 digits',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (formValid()) {\r\n            firebase.auth().createUserWithEmailAndPassword(email, password)\r\n                .then(async ({ user }) => {\r\n                    localStorage.setItem('uid', JSON.stringify(user.uid));\r\n                    localStorage.setItem('email', JSON.stringify(user.email));\r\n                    await user.updateProfile({ displayName: name });\r\n                    addClient();\r\n                })\r\n                .catch(e => {\r\n                    Swal.fire('Error', e.message, 'error');\r\n                });\r\n        };\r\n    }\r\n\r\n    const addClient = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                uid: JSON.parse(localStorage.getItem('uid')),\r\n                name,\r\n                lastName,\r\n                password,\r\n                email\r\n            }),\r\n        });\r\n        const body = await resp.json();\r\n        localStorage.setItem('id', JSON.stringify(body._id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrap mt-3\">\r\n            <div className=\"login-html\">\r\n                <label htmlFor=\"tab-2\" className=\"tab\">Sign Up</label>\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"sign-up-html\">\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"user\" className=\"label\">Name</label>\r\n                            <input\r\n                                id=\"user\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                className=\"input\"\r\n                                value={name}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"pass\" className=\"label\">Last Name</label>\r\n                            <input\r\n                                id=\"pass\"\r\n                                name=\"lastName\"\r\n                                type=\"text\"\r\n                                className=\"input\"\r\n                                value={lastName}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"pass\" className=\"label\">Email Address</label>\r\n                            <input\r\n                                id=\"pass\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                className=\"input\"\r\n                                value={email}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label htmlFor=\"pass\" className=\"label\">Password</label>\r\n                            <input\r\n                                id=\"pass\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                className=\"input\"\r\n                                value={password}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"button\"\r\n                                value=\"Sign Up\" />\r\n                        </div>\r\n                        <div className=\"foot-lnk\">\r\n                            <Link to=\"/Login\">Back</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Swal from 'sweetalert2';\r\n\r\nexport const getClients = async () => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/client`);\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getClient = async (id) => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${id}`);\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const deleteClient = async (id) => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Delete',\r\n                text: 'Deleted customer!'\r\n            })\r\n        }\r\n        return resp();\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}","import Swal from 'sweetalert2';\r\nconst uid = JSON.parse(localStorage.getItem('uid'));\r\n\r\nexport const getCategories = async () => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/category`);\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getProducts = async () => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/product`);\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const buy = async (product) => {\r\n    try {\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Purchased product',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n        });\r\n        const resp = await fetch(`http://localhost:4000/api/client/${uid}/products`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(product),\r\n        });\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { LogOutUser } from '../../auth/clientAuth';\r\nimport { types } from '../../types/types';\r\nimport { getClient } from '../adminClient/services';\r\nimport { getCategories } from '../articles/services';\r\n\r\nexport const Navbar = () => {\r\n    const { dispatch } = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const id = JSON.parse(localStorage.getItem('uid'));\r\n    const email = JSON.parse(localStorage.getItem('email'));\r\n\r\n    const getClientList = async () => {\r\n        const resp = await getClient(id);\r\n        const body = await resp.json();\r\n        let { client } = body;\r\n        setBody(client);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getClientList();\r\n    }, []);\r\n\r\n    const [body, setBody] = useState({});\r\n\r\n    const [category, setCategory] = useState([]);\r\n\r\n    const handleLogout = () => {\r\n        history.replace('/login');\r\n        LogOutUser();\r\n        dispatch({\r\n            type: types.logout\r\n        });\r\n    }\r\n\r\n    const getCategory = async () => {\r\n        const resp = await getCategories();\r\n        const body = await resp.json();\r\n        setCategory(body);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategory();\r\n    }, []);\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary navbar mt-2\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    <img src={'/assets/img/1.png'} style={{ width: 70, marginTop: -7 }} alt=\"MetroShop\" />\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div className=\"navbar-nav\">\r\n                        <Link to=\"/\" className=\"nav-link active\" aria-current=\"page\">\r\n                            <h4>\r\n                                Home\r\n                            </h4>\r\n                        </Link>\r\n                        {\r\n                            category.map((item) => {\r\n                                return (\r\n                                    <div key={item._id}>\r\n                                        <h4>\r\n                                            <Link to={`/CategoryScreen/${item._id}`} className=\"nav-link\" key={item._id} >\r\n                                                {item.name}\r\n                                            </Link>\r\n                                        </h4>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end w-100\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li\r\n                                className=\"nav-item nav-link btn\"\r\n                            >\r\n                                Welcome {email}\r\n                            </li>\r\n                            <button\r\n                                className=\"nav-item nav-link btn\"\r\n                                onClick={handleLogout}\r\n                            >\r\n                                LogOut\r\n                            </button>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCategories, getProducts, buy } from './services';\r\n\r\nexport const HomeArticlesScreen = () => {\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    let productsFront = products.map(item => {\r\n        return {\r\n            ...item,\r\n            productId: item._id\r\n        };\r\n    });\r\n    const getCategoriesList = async () => {\r\n        const resp = await getCategories();\r\n        const body = await resp.json();\r\n        setCategories(body);\r\n    }\r\n    const getProductsList = async () => {\r\n        const resp = await getProducts();\r\n        const body = await resp.json();\r\n        setProducts(body.products);\r\n    }\r\n\r\n    const buyProduct = async (product) => {\r\n        const resp = await buy(product);\r\n        const data = await resp.json();\r\n        getProductsList();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategoriesList();\r\n        getProductsList();\r\n    }, [])\r\n\r\n    const getState = (state) => {\r\n        if (state) {\r\n            return (\r\n                <button className=\"btn btn-success btn-block\" >\r\n                    Buy\r\n                </button>\r\n            )\r\n        } else {\r\n            return (\r\n                <button className=\"btn btn-secondary btn-block\" disabled>\r\n                    Spent\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"carousel slide\" data-bs-ride=\"carousel\">\r\n                <div className=\"carousel-inner\">\r\n                    <div className=\"carousel-item active\">\r\n                        <img src={'./assets/img/1.jpg'} className=\"d-block w-100 img-fluid\" alt=\"...\" />\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <img src={'./assets/img/4.jpg'} className=\"d-block w-100 img-fluid\" alt=\"...\" />\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <img src={'./assets/img/5.jpg'} className=\"d-block w-100 img-fluid\" alt=\"...\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Link to=\"/ProductScreen\" className=\"btn btn-dark m-3\" >My Product</Link>\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    {\r\n                        productsFront.map((item) => {\r\n                            return (\r\n                                <div key={item.productId} className=\"col-md-3 m-1 text-dark\" >\r\n                                    <div className=\"col home-area m-1\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <h4 className=\"card-title\"><kbd>{item.name}</kbd></h4>\r\n                                                <img src={item.urlImg} width=\"400px\" className=\"img-fluid\" />\r\n                                                <hr />\r\n                                                <h6 className=\"card-subtitle mb-2 font-weight-bold text-danger\"><font size=\"4\" color=\"red\">P</font><font size=\"3\"></font><font size=\"4\">rice: </font><mark>$ {item.price}</mark></h6>\r\n                                                <p className=\"card-text mb-2\"><font size=\"3\" color=\"Navy\">Description:</font> {item.description}</p>\r\n                                                <h6 className=\"card-text\" ><strong>Category: </strong><em>{item.category}</em></h6>\r\n                                                <Link to={`/BuyScreen/${item.productId}`} className=\"btn btn-link btn-block\">More Info</Link>\r\n                                                <div onClick={() => buyProduct(item)}>{getState(item.spent)}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","const uid = JSON.parse(localStorage.getItem('uid'));\r\n\r\nexport const getProduct = async (id) => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`);\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getProductClient = async () => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${uid}/products`);\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const deleteProduct = async (id) => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/client/${uid}/products/${id}`, {\r\n            method: 'PUT'\r\n        });\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const updateProduct = async (product, id) => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(product),\r\n        });\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n\r\n    }\r\n}\r\n\r\nexport const getCategories = async (id) => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/category/${id}`)\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getProductCategory = async (id) => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/product/category/${id}`);\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { buy } from '../articles/services';\r\nimport { getProduct } from './services';\r\n\r\nexport const BuyScreen = () => {\r\n    let { id } = useParams();\r\n\r\n    const getProductList = async () => {\r\n        const resp = await getProduct(id);\r\n        const body = await resp.json();\r\n        setProduct({\r\n            ...body,\r\n            productId: body._id\r\n        });\r\n    }\r\n\r\n    const [product, setProduct] = useState({});\r\n    let { _id, description, name, price, quantityInStock, spent, urlImg, category } = product;\r\n\r\n    useEffect(() => {\r\n        getProductList();\r\n    }, [() => buy()]);\r\n\r\n    const buyProduct = async (product) => {\r\n        const resp = await buy(product);\r\n        const data = await resp.json();\r\n        // getProductsList();\r\n    }\r\n\r\n    const getState = (state) => {\r\n        if (state) {\r\n            return (\r\n                <button className=\"btn btn-success btn-block\" >\r\n                    Buy\r\n                </button>\r\n            )\r\n        } else {\r\n            return (\r\n                <button className=\"btn btn-secondary btn-block\" disabled>\r\n                    Spent\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n    const back = () => {\r\n        window.history.back()\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"card mt-3\">\r\n                    <div className=\"row g-0\">\r\n                        <div className=\"col-md-7\">\r\n                            <img src={urlImg} className=\"img-fluid\" />\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\"><kbd>{name}</kbd></h4>\r\n                                <h5 className=\"card-subtitle mb-2 font-weight-bold text-danger mt-2\"><font size=\"4\" color=\"red\">P</font><font size=\"4\">rice: </font><mark>$ {price}</mark></h5>\r\n                                <p className=\"card-subtitle mt-2\"><font size=\"3\" color=\"black\">Category: <em>{category}</em></font></p>\r\n                                <p className=\"card-text mt-2\"><font size=\"3\" color=\"black\">Description:</font><font size=\"3\" color=\"gray\">{description}</font></p>\r\n                                <h5><font size=\"3\" color=\"black\"> Quantity In Stock </font></h5>\r\n                                <p className=\"card-text\"><font size=\"4\" color=\"red\"><em>{quantityInStock}</em></font></p>\r\n                                <hr />\r\n                            </div>\r\n                            <div onClick={() => buyProduct(product)}>{getState(spent)}</div>\r\n                            <button onClick={() => back()} type=\"button\" className=\"btn btn-danger btn-sm btn-block mt-2\">Back</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { getProductClient, deleteProduct, updateProduct } from \"../buy/services\";\r\n\r\nexport const ProductScreen = () => {\r\n\r\n    const getProductClientId = async () => {\r\n        const resp = await getProductClient();\r\n        const body = await resp.json();\r\n        let { buy } = body;\r\n        setProduct(buy);\r\n    }\r\n\r\n    const [products, setProduct] = useState([]);\r\n\r\n    let productsFront = products.map(item => {\r\n        return {\r\n            ...item,\r\n            counter: item.amount,\r\n            id: item._id\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n    }, [() => allFunction()]);\r\n\r\n    useEffect(() => {\r\n        getProductClientId();\r\n    }, []);\r\n\r\n    const deleteProductId = async (id) => {\r\n        const resp = await deleteProduct(id);\r\n        const body = await resp.json();\r\n    }\r\n\r\n    const updateProductId = async (product, id) => {\r\n        const resp = await updateProduct(product, id);\r\n        const data = await resp.json();\r\n    }\r\n\r\n    const allFunction = (id, product) => {\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Product Removed',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n        })\r\n        deleteProductId(id);\r\n        updateProductId(product, id);\r\n        getProductClientId(id);\r\n    }\r\n    const back = () => {\r\n        window.history.back()\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                productsFront.length > 0\r\n                    ?\r\n                    <div className=\"container\">\r\n                        <button onClick={() => back()} type=\"button\" className=\"btn btn-danger btn-sm mt-3\">Back</button>\r\n                        <div className=\"card mt-3\">\r\n                            {\r\n                                productsFront.map((item) => {\r\n                                    return (\r\n                                        <div className=\"row g-0\" key={item._id}>\r\n                                            <div className=\"col-md m-4\">\r\n                                                <img src={item.urlImg} width=\"400px\" className=\"img-fluid\" />\r\n                                            </div>\r\n                                            <div className=\"col-md-7 m-2\">\r\n                                                <div className=\"card-body\">\r\n                                                    <h4 className=\"card-title\"><kbd>{item.name}</kbd></h4>\r\n                                                    <hr />\r\n                                                    <h6 className=\"card-subtitle mb-2 font-weight-bold text-danger\"><font size=\"4\" color=\"red\">P</font><font size=\"3\"></font><font size=\"4\">rice: </font><mark>$ {item.price}</mark></h6>\r\n                                                    <p className=\"card-subtitle mb-2\"><font size=\"3\" color=\"Navy\">Description:</font> <font size=\"3\" color=\"black\">{item.description}</font></p>\r\n                                                    <h6><font size=\"3\" color=\"black\"> <strong>Category: </strong></font><em><font size=\"3\" color=\"black\">{item.category}</font></em></h6>\r\n                                                    <h5><font size=\"3\" color=\"black\"> Quantity In Stock </font><font size=\"4\" color=\"red\"><em>{item.quantityInStock}</em></font></h5>\r\n                                                    <p className=\"card-text\"><font size=\"3\" color=\"black\">Amount: {item.amount}</font></p>\r\n                                                    <hr />\r\n                                                </div>\r\n                                                <button onClick={() => allFunction(item._id, item)} className=\"btn btn-warning btn-sm btn-block\">Remover from my list</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"container\">\r\n                        <div className=\"card-center mt-3\">\r\n                        </div>\r\n                        <h3>You have no purchase</h3>\r\n                        <button onClick={() => back()} type=\"button\" className=\"btn btn-danger btn-sm\">Back</button>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { buy } from '../articles/services';\r\nimport { getCategories, getProductCategory } from '../buy/services';\r\n\r\nexport const CategoryScreen = () => {\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getCategoriesList();\r\n    }, []);\r\n\r\n    const getProductCategoryList = async () => {\r\n        const resp = await getProductCategory(id);\r\n        const body = await resp.json();\r\n        setCategory(body);\r\n    }\r\n    const [category, setCategory] = useState([]);\r\n    const [categories, setCategories] = useState();\r\n\r\n    let productsFront = category.map(item => {\r\n        return {\r\n            ...item,\r\n            productId: item._id\r\n        };\r\n    });\r\n    useEffect(() => {\r\n        getProductCategoryList();\r\n    }, []);\r\n\r\n    const buyProduct = async (product) => {\r\n        const resp = await buy(product);\r\n        const data = await resp.json();\r\n        getProductCategoryList();\r\n    }\r\n\r\n    const getCategoriesList = async () => {\r\n        const resp = await getCategories(id);\r\n        const body = await resp.json();\r\n    }\r\n\r\n    const getState = (state) => {\r\n        if (state) {\r\n            return (\r\n                <button className=\"btn btn-success btn-block\">\r\n                    Buy\r\n                </button>\r\n            )\r\n        } else {\r\n            return (\r\n                <button className=\"btn btn-secondary btn-block\" disabled>\r\n                    Spent\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container mt-4\">\r\n                {\r\n                    <h1 className=\"display-4 text-blue text-center bg-dark\">{categories && categories.name}</h1>\r\n                }\r\n                <div className=\"row justify-content-md-center\">\r\n                    {\r\n                        productsFront.map((item) => {\r\n                            return (\r\n                                <div key={item.productId} className=\"col-md-3 m-1 text-dark\" >\r\n                                    <div className=\"col home-area m-1\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <h4 className=\"card-title\"><kbd>{item.name}</kbd></h4>\r\n                                                <img src={item.urlImg} width=\"400px\" className=\"img-fluid\" />\r\n                                                <hr />\r\n                                                <h6 className=\"card-subtitle mb-2 font-weight-bold text-danger\"><font size=\"4\" color=\"red\">P</font><font size=\"3\"></font><font size=\"4\">rice: </font><mark>$ {item.price}</mark></h6>\r\n                                                <p className=\"card-subtitle mb-2\"><font size=\"3\" color=\"Navy\">Description:</font> {item.description}</p>\r\n                                                <h6 className=\"card-text\" ><strong>Category: </strong><em>{item.category}</em></h6>\r\n                                                <Link to={`/BuyScreen/${item.productId}`} className=\"btn btn-link btn-block\">More Info</Link>\r\n                                                <div onClick={() => buyProduct(item)}>{getState(item.spent)}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Navbar } from '../components/userInterface/Navbar';\r\n\r\nimport { HomeArticlesScreen } from \"../components/articles/HomeArticlesScreen\";\r\nimport { BuyScreen } from \"../components/buy/BuyScreen\";\r\nimport { ProductScreen } from '../components/buy/ProductScreen';\r\nimport { CategoryScreen } from '../components/category/CategoryScreen';\r\n\r\nexport const DashboardRouter = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <Switch>\r\n                <Route exact path=\"/HomeArticlesScreen\" component={HomeArticlesScreen} />\r\n                <Route exact path=\"/ProductScreen\" component={ProductScreen} />\r\n                <Route exact path=\"/BuyScreen/:id\" component={BuyScreen} />\r\n                <Route exact path=\"/CategoryScreen/:id\" component={CategoryScreen} />\r\n                <Redirect to=\"/HomeArticlesScreen\" />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { deleteClient, getClients } from '../adminClient/services';\r\n\r\nexport const AdminClientScreen = () => {\r\n    const [client, setClient] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getClientsList();\r\n    }, []);\r\n\r\n    const getClientsList = async () => {\r\n        const resp = await getClients();\r\n        const body = await resp.json();\r\n        let { clients } = body;\r\n        setClient(clients);\r\n    }\r\n\r\n    const [buy] = client;\r\n\r\n    const deleteClientId = async (id) => {\r\n        const resp = await deleteClient(id);\r\n        getClientsList();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <div className=\"row\" >\r\n                <div className=\"col-lg-12 col-md-12\" >\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr className=\"table-warning\">\r\n                                <th scope=\"col\">Id</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Last Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Buys</th>\r\n                                <th scope=\"col\">Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                client.map((item, i) => {\r\n                                    return (\r\n                                        <tr key={item._id}>\r\n                                            <th scope=\"row\">{i + 1}</th>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.lastName}</td>\r\n                                            <td>{item.email}</td>\r\n                                            <td>{item.buy.length}</td>\r\n                                            <td>\r\n                                                <button onClick={() => deleteClientId(item._id)} className=\"btn btn-outline-danger btn-sm btn-block\">Delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import Swal from 'sweetalert2';\r\n\r\nexport const getProductCategory = async (id) => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/product/category/${id}`);\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const deleteProduct = async (id) => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Delete',\r\n                text: 'Deleted product!',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n        }\r\n        return body();\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getProduct = async (id) => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`);\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getCategory = async () => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/category`);\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const newProduct = async (data) => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/product`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'success',\r\n                title: 'Product created successfully',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            });\r\n        }\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const editProduct = async (id, values) => {\r\n    try {\r\n        const resp = await fetch(`http://localhost:4000/api/product/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: values.name,\r\n                description: values.description,\r\n                price: values.price,\r\n                quantityInStock: values.quantityInStock,\r\n                urlImg: values.urlImg\r\n            }),\r\n        });\r\n        const body = await resp.json();\r\n        if (body.nModified == 1) {\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'success',\r\n                title: 'Product edited successfully',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            });\r\n        }\r\n        return resp;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getProductCategory, deleteProduct } from '../adminCategory/services';\r\n\r\nexport const AdminCategoryScreen = () => {\r\n    useEffect(() => {\r\n        getProductCategoryList();\r\n    }, []);\r\n\r\n    let { id } = useParams();\r\n    const [category, setCategory] = useState();\r\n\r\n    const getProductCategoryList = async () => {\r\n        const resp = await getProductCategory(id);\r\n        const body = await resp.json();\r\n        setCategory(body);\r\n    }\r\n\r\n    const deleteProductId = async (id) => {\r\n        const resp = await deleteProduct(id);\r\n        getProductCategoryList();\r\n    }\r\n    const getState = (state) => {\r\n        if (state) {\r\n            return (\r\n                <div className=\"alert alert-success\" >\r\n                    Disponible\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"alert alert-danger\" >\r\n                    Agotado\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Link to={`/admin/createProduct`} className=\"btn btn-info btn-sm btn-block\">Crear New Product</Link>\r\n                <div className=\"col-lg-12 col-md-12 mt-2\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr className=\"table-info \">\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Description</th>\r\n                                <th scope=\"col\">Price</th>\r\n                                <th scope=\"col\">Name Category</th>\r\n                                <th scope=\"col\" >Quantity In Stock</th>\r\n                                <th scope=\"col\">Spent</th>\r\n                                <th scope=\"col\" >Url Imagen</th>\r\n                                <th scope=\"col\" >Edit/Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                category && category.map((item, i) => (\r\n                                    <tr key={item._id}>\r\n                                        <th scope=\"row\">{i + 1}</th>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.description}</td>\r\n                                        <td>{item.price}</td>\r\n                                        <td>{item.category}</td>\r\n                                        <td>{item.quantityInStock}</td>\r\n                                        <td>{getState(item.spent)}</td>\r\n                                        <td > <img src={item.urlImg} width=\"80px\" className=\"img-fluid\" alt=\"img\" /></td>\r\n                                        <td>\r\n                                            <Link to={`/admin/product/edit/${item._id}`} className=\"btn btn-info btn-sm btn-block\">Edit</Link>\r\n                                            <button onClick={() => deleteProductId(item._id)} className=\"btn btn-danger btn-sm btn-block\">Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useForm } from '../hooks/useForm';\r\nimport { getCategory, getProduct, editProduct } from './services';\r\n\r\nexport const FormProduct = () => {\r\n    useEffect(() => {\r\n        getProductId();\r\n        getCategoryList();\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        editProductId();\r\n    }\r\n\r\n    const { id } = useParams();\r\n\r\n    const [values, handleInputChange, loadDataForm] = useForm({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        quantityInStock: '',\r\n        urlImg: ''\r\n    });\r\n\r\n    const { name, description, price, quantityInStock, urlImg } = values;\r\n\r\n    const getProductId = async () => {\r\n        const resp = await getProduct(id);\r\n        const body = await resp.json();\r\n        loadDataForm(body);\r\n    }\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const getCategoryList = async () => {\r\n        const resp = await getCategory();\r\n        const body = await resp.json();\r\n        setCategories(body);\r\n    }\r\n\r\n    const editProductId = async () => {\r\n        const resp = await editProduct(id, values);\r\n        handleGameClick();\r\n    }\r\n    const back = () => {\r\n        window.history.back()\r\n    }\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const handleGameClick = () => {\r\n        setDisabled(!disabled);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"login-area col col-lg-6 col-md-8 col-sm-11\">\r\n                        <div className=\"box\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <fieldset>\r\n                                    <legend>Edit a Product</legend>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            disabled={disabled}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"Name..\"\r\n                                            value={name}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"description\"\r\n                                            disabled={disabled}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"Description..\"\r\n                                            value={description}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Price</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            min=\"1\"\r\n                                            name=\"price\"\r\n                                            disabled={disabled}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"Price..\"\r\n                                            value={price}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Quantity In Stock</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            min=\"0\"\r\n                                            name=\"quantityInStock\"\r\n                                            disabled={disabled}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"Quantity In Stock...\"\r\n                                            value={quantityInStock}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Url Image</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"urlImg\"\r\n                                            disabled={disabled}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"Url Image\"\r\n                                            value={urlImg}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-info btn-sm mr-2\" onClick={() => handleGameClick} disabled={disabled}>Aceppt</button>\r\n                                    <button onClick={() => back()} type=\"button\" className=\"btn btn-danger btn-sm\">Back</button>\r\n                                </fieldset>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from '../hooks/useForm';\r\nimport Swal from 'sweetalert2';\r\nimport { getCategory, newProduct } from './services';\r\n\r\nexport const NewProduct = () => {\r\n    useEffect(() => {\r\n        getCategoryList();\r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (formValid()) {\r\n            createProduct();\r\n        }\r\n    }\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        name: '',\r\n        categoryId: '',\r\n        description: '',\r\n        price: '',\r\n        quantityInStock: '',\r\n        urlImg: '',\r\n        amount: 1\r\n    });\r\n\r\n    const { name, price, description, quantityInStock, urlImg, category: categoryId } = values || {};\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const getCategoryList = async () => {\r\n        const resp = await getCategory();\r\n        const body = await resp.json();\r\n        setCategories(body);\r\n    }\r\n\r\n    const createProduct = async () => {\r\n        const resp = await newProduct(values);\r\n    }\r\n\r\n    const formValid = () => {\r\n        if (name.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a name',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (description.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a description',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        }\r\n        else if (price.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a price for the product',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (values.categoryId.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must select a category',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (quantityInStock.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a quantity In Stock',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        } else if (urlImg.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'You must enter a url',\r\n                icon: 'error',\r\n                message: 'error',\r\n                confirmButtonText: 'Ok'\r\n            })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const back = () => {\r\n        window.history.back()\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"login-area col col-lg-6 col-md-8 col-sm-11\">\r\n                        <div className=\"box\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <fieldset>\r\n                                    <legend>Create a Product</legend>\r\n                                    <div className=\"form-group row\">\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Name..\"\r\n                                            value={name}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Description</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"description\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Description..\"\r\n                                            value={description}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Price</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            min=\"0\"\r\n                                            name=\"price\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Example 9999\"\r\n                                            value={price}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name Category</label>\r\n                                        <select\r\n                                            name=\"categoryId\"\r\n                                            className=\"form-control form-control-sm\"\r\n                                            onChange={handleInputChange}\r\n                                        >\r\n                                            <option value=\"0\">Seleccione categoria</option>\r\n                                            {\r\n                                                categories && categories.map((item) => {\r\n                                                    return (\r\n                                                        <option key={item._id} value={item._id}>{item.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Quantity In Stock</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            name=\"quantityInStock\"\r\n                                            min=\"1\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Quantity In Stock...\"\r\n                                            value={quantityInStock}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Url Image</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"urlImg\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Url Image\"\r\n                                            value={urlImg}\r\n                                            onChange={handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-info btn-sm btn-block\" onClick={() => back()}>Create</button>\r\n                                    <button onClick={() => back()} type=\"button\" className=\"btn btn-danger btn-sm btn-block\">Back</button>\r\n                                </fieldset>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCategories } from '../articles/services';\r\n\r\nexport const Sidebar = () => {\r\n    const [category, setCategory] = useState([]);\r\n\r\n    const getCategory = async () => {\r\n        const resp = await getCategories();\r\n        const body = await resp.json();\r\n        setCategory(body);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategory();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"bg-light border-right\" id=\"sidebar-wrapper\">\r\n            <div className=\"sidebar-heading\">Metro WorkShop</div>\r\n            <div className=\"list-group list-group-flush\">\r\n                <Link to=\"/admin/client\" className=\"list-group-item list-group-item-action bg-light\">Client</Link>\r\n                {\r\n                    category.map((item) => {\r\n                        return (\r\n                            <div key={item._id} >\r\n                                <Link to={`/admin/AdminCategoryScreen/${item._id}`} className=\"list-group-item list-group-item-action bg-light\">{item.name}</Link>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { LogOutUser } from '../../auth/clientAuth';\r\nimport { types } from '../../types/types';\r\n\r\nexport const NavbarAdmin = () => {\r\n    const history = useHistory();\r\n\r\n    const { user: { email }, dispatch } = useContext(AuthContext);\r\n    const handleLogout = () => {\r\n        history.replace('/admin/login');\r\n        LogOutUser();\r\n        dispatch({\r\n            type: types.logout\r\n        });\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item dropdown\">\r\n                        <Link className=\"dropdown-item\" to=\"\">{email}</Link>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <button className=\"btn btn-outline-info\" to=\"/admin\" onClick={handleLogout}>Logout</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { AdminClientScreen } from \"../components/adminClient/AdminClientScreen\";\r\nimport { AdminCategoryScreen } from \"../components/adminCategory/AdminCategoryScreen\";\r\nimport { FormProduct } from \"../components/adminCategory/FormProduct\";\r\nimport { NewProduct } from \"../components/adminCategory/NewProduct\";\r\nimport { Sidebar } from \"../components/userInterface/Sidebar\";\r\nimport { NavbarAdmin } from \"../components/userInterface/NavbarAdmin\";\r\nimport '../styles/simple-sidebar.css';\r\n\r\nexport const AdminRouter = () => {\r\n    return (\r\n        <div className=\"d-flex\" id=\"wrapper\" >\r\n            <Sidebar />\r\n            <div className=\"container\" id=\"page-content-wrapper\">\r\n                <NavbarAdmin />\r\n                <div className=\"container\" >\r\n                    <Switch>\r\n                        <Route exact path=\"/admin/AdminCategoryScreen/:id\" component={AdminCategoryScreen} />\r\n                        <Route exact path=\"/admin/product/edit/:id\" component={FormProduct} />\r\n                        <Route exact path=\"/admin/createProduct\" component={NewProduct} />\r\n                        <Route exact path=\"/admin/client\" component={AdminClientScreen} />\r\n\r\n                        <Redirect to=\"/admin/client\" />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { clientLogin } from '../../auth/clientAuth';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const LoginAdminScreen = () => {\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password } = values;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        clientLogin(email, password);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrap mt-3\">\r\n            <div className=\"login-html\">\r\n                <label className=\"tab\">Sign In Administrator</label>\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"sign-in-html mt-5\">\r\n                        <div className=\"group\">\r\n                            <label className=\"label\">Email</label>\r\n                            <input\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                className=\"input\"\r\n                                value={email}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <label className=\"label\">Password</label>\r\n                            <input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                className=\"input\"\r\n                                value={password}\r\n                                onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"group mt-4\">\r\n                            <input type=\"submit\" className=\"button\" value=\"Sign In\" />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PrivateAdminRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? (<Component {...props} />)\n                    : (<Redirect to=\"/admin/login\" />)\n            )}\n        />\n    )\n}\n\nPrivateAdminRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicAdminRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/admin\" /> )\n            )}\n        />\n    )\n}\n\nPublicAdminRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\n\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { CreateUserScreen } from \"../components/login/CreateUserScreen\";\r\nimport { DashboardRouter } from \"./DashboardRouter\";\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { AdminRouter } from \"./AdminRouter\";\r\nimport '../styles/login.css';\r\nimport { types } from \"../types/types\";\r\nimport { LoginAdminScreen } from \"../components/login/LoginAdminScreen\";\r\n\r\nimport { PrivateAdminRoute } from \"./PrivateAdminRoute\";\r\nimport { PublicAdminRoute } from \"./PublicAdminRoute\";\r\n\r\n\r\nexport const AppRouter = () => {\r\n    const { user, dispatch } = useContext(AuthContext);\r\n    const userLogged = JSON.parse(localStorage.getItem('uid'));\r\n\r\n    const [client, setClient] = useState([]);\r\n    useEffect(() => {\r\n        getClients();\r\n    }, []);\r\n\r\n    const getClients = async () => {\r\n        const resp = await fetch(`http://localhost:4000/api/client`);\r\n        const body = await resp.json();\r\n        const { clients } = body;\r\n        setClient(clients);\r\n    };\r\n\r\n    let admin = client.map((admin) => {\r\n        if (admin.isAdmin) {\r\n            return (admin.uid)\r\n        }\r\n    })\r\n    let [uid] = admin;\r\n    const isAdmin = userLogged === uid ? true : false;\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user?.uid) {\r\n                dispatch({\r\n                    type: types.login,\r\n                    payload: {\r\n                        name: user.displayName,\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={user.logged && !isAdmin} />\r\n                <PublicRoute exact path=\"/create-user\" component={CreateUserScreen} isAuthenticated={user.logged && !isAdmin} />\r\n\r\n                <PublicAdminRoute exact path=\"/admin/login\" component={LoginAdminScreen} isAuthenticated={user.logged && isAdmin} />\r\n                <PrivateAdminRoute path=\"/admin\" component={AdminRouter} isAuthenticated={user.logged && isAdmin} />\r\n\r\n                <PrivateRoute path=\"/\" component={DashboardRouter} isAuthenticated={user.logged && !isAdmin} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import React, { useEffect, useReducer} from 'react';\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { authReducer } from './auth/authReducer';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false };\r\n}\r\n\r\nexport const MetroApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init)\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [])\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, dispatch }}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MetroApp } from './MetroApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <MetroApp/>,\n  document.getElementById('root')\n);\n\n "],"sourceRoot":""}